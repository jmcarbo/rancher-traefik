graceTimeOut = 10
logLevel = "DEBUG"
# traefik.toml
defaultEntryPoints = ["http", "https"]
[entryPoints]
  [entryPoints.http]
  address = "{{ getv "/self/container/labels/traefik.entrypoints.http.address" ":9980"}}"
  {{if exists "/self/container/labels/traefik.entrypoints.https.address" -}}
  [entryPoints.https]
  address = "{{ getv "/self/container/labels/traefik.entrypoints.https.address" ":9443"}}"
    [entryPoints.https.tls]
      {{ $certificates := split (getv "/self/container/labels/traefik.certificates") "," -}}
      {{ range $certificates }}
      [[entryPoints.https.tls.certificates]]
      CertFile = "/acme/certificates/{{.}}.crt"
      KeyFile = "/acme/certificates/{{.}}.key"
      {{end -}}
      {{range getvs "/services/*/metadata/traefik.certificates" -}}
      {{ $certificates := split . "," -}}
      {{ range $certificates }}
      [[entryPoints.https.tls.certificates]]
      CertFile = "/acme/certificates/{{.}}.crt"
      KeyFile = "/acme/certificates/{{.}}.key"
      {{end -}}
      {{end -}}
	
  {{end}}

#[acme]
#email = "test@traefik.io"
#storageFile = "/acme.json"
#entryPoint = "https"
#onDemand = true
#caServer = "https://acme-staging.api.letsencrypt.org/directory"

# Domains list
# You can provide SANs (alternative domains) to each main domain
# WARNING, Take note that Let's Encrypt have rate limiting: https://community.letsencrypt.org/t/quick-start-guide/1631
# Each domain & SANs will lead to a certificate request.
#
# [[acme.domains]]
#   main = "local1.com"
#   sans = ["test1.local1.com", "test2.local1.com"]
# [[acme.domains]]
#   main = "local2.com"
#   sans = ["test1.local2.com", "test2x.local2.com"]
# [[acme.domains]]
#   main = "local3.com"
# [[acme.domains]]
#   main = "local4.com"
[web]
address = ":8080"

[file]
watch = true
[backends]
{{range gets "/services/*/metadata/traefik.enable"}}
  {{$metadata := dir .Key -}}
  {{$service_name_key := dir $metadata -}}
  {{$service_name := printf "%s/name" $service_name_key -}}
  {{$backend_name := printf "%s/traefik.backend" $metadata -}}
  {{$port_key := printf "%s/traefik.port" $metadata -}}
  {{$port := getv $port_key -}}
  [backends.{{getv $backend_name}}]
  {{$containers := printf "%s/containers/*/name" $service_name_key -}}
  {{range gets $containers -}}
    {{$server_name := .Value -}}
    {{$server := dir .Key -}}
    {{$ip_key := printf "%s/primary_ip" $server -}}
    {{$ip := getv $ip_key -}}
    {{$url := printf "http://%s:%s" $ip $port -}}
    [backends.{{getv $backend_name}}.servers.{{$server_name}}]
       url = "{{$url}}"
    {{end -}}
{{end}}

[frontends]
{{range gets "/services/*/metadata/traefik.enable" -}}
  {{$metadata := dir .Key -}}
  {{$service_name_key := dir $metadata -}}
  {{$service_name := printf "%s/name" $service_name_key -}}
  {{$backend_name := printf "%s/traefik.backend" $metadata -}}
  {{$rule := printf "%s/traefik.frontend.rule" $metadata -}}
  {{$value := printf "%s/traefik.frontend.value" $metadata -}}
  [frontends.{{getv $service_name}}]
    backend="{{getv $backend_name}}"
    passHostHeader = true
    {{ $routes := split $value "," -}}
    {{ range $index, $element := $routes -}}
    [frontends.{{getv $service_name}}.routes.{{$index}}]
      rule = "{{getv $rule}}"
      value = "{{getv $element}}"
    {{end -}}
{{end}}

